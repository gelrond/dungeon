// ********************************************************************************************************************
import { Color, PerspectiveCamera, Scene, WebGLRenderer } from 'three';
// ********************************************************************************************************************
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';
// ********************************************************************************************************************
import { Dungeon } from './code/dungeon';
// ********************************************************************************************************************

// ********************************************************************************************************************
// scene & renderer
// ********************************************************************************************************************
const scene = new Scene();
scene.background = new Color('#333333');
const renderer = new WebGLRenderer({ antialias: true });

// ********************************************************************************************************************
// camera
// ********************************************************************************************************************
const camera = new PerspectiveCamera(50, 1, 0.1, 128);
camera.position.z = 64;
new OrbitControls(camera, renderer.domElement);

// ********************************************************************************************************************
// dungeon
// ********************************************************************************************************************
const dungeon = new Dungeon();
dungeon.generate(128);
dungeon.instantiate(scene);

// ********************************************************************************************************************
// initialise
// ********************************************************************************************************************
function initialise() {
    addEventListener('resize', resize);
    document.body.appendChild(renderer.domElement);
    resize();
    update();
}

// ********************************************************************************************************************
// resize
// ********************************************************************************************************************
function resize() {
    camera.aspect = window.innerWidth / window.innerHeight;
    renderer.setSize(window.innerWidth, window.innerHeight);
}

// ********************************************************************************************************************
// update
// ********************************************************************************************************************
function update() {
    requestAnimationFrame(update);
    renderer.render(scene, camera);
}
initialise();
